{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Common.ts","webpack:///./src/app/Farmer.ts","webpack:///./src/app/Video.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/farmers/farmers.component.css","webpack:///./src/app/farmers/farmers.component.html","webpack:///./src/app/farmers/farmers.component.ts","webpack:///./src/app/filter-name.pipe.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/topnav/topnav.component.css","webpack:///./src/app/topnav/topnav.component.html","webpack:///./src/app/topnav/topnav.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Farmer } from './Farmer';\nimport { Video } from './Video';\n\nimport { Injectable } from '@angular/core';\n@Injectable({\n  providedIn: 'root'\n})\nexport class Common {\n  public farmers: Farmer[];\n  public indianRivers: string[];\n  public countries: string[];\n  public nutTrees: string[];\n\n  constructor() {\n\n    this.indianRivers = [\n            'Ganga', \n            'Chambal', \n            'Betwa', \n            'Yamuna', \n            'Gomti', \n            'Ghaghr', \n            'Son', \n            'Gandak', \n            'Kosi', \n            'Brahmaputra'\n    ];\n    this.farmers = [\n      new Farmer({\n        id: 0, \n        name: 'Henry Ford', \n        videos: [\n          new Video({\n            url: 'bMHSFt1BhLc', \n            title:\n              'Farmer Boy Rose to the Power by Rose Wilder Land', \n            cat: 'Audiobook'\n          })\n        ]\n      }), \n      new Farmer({\n        id: 1, \n        name: 'Nammalvar G',\n        videos: [\n          new Video({\n            url: 'TvLQuSRKvbs',\n            title:\n              'How to create Natural Fertilizer', \n            cat: 'Video'\n          })\n        ]\n      }), \n      new Farmer ({id: 1, \n        name: 'Subhas Palekar',\n        videos: [\n          new Video({\n            url: 'ZihEgF-sBvI',\n            title:\n              'Zero Budget Natural Farming',\n            cat: 'Video'\n          })\n        ]\n      }), \n \n      new Farmer({\n        id: 2,\n        name: 'Eliot Coleman', \n        videos: [\n          new Video({\n            url: '2E1p_gjEDM8', \n            title:\n              'Nothing is Impossible Keynote Speech Utah Farm Conference 2018', \n            cat: 'Speech'\n          }),\n          new Video({\n            url: 'ovR-OZlul3w', \n            title:\n              'Tomato Tips & How to build a greenhouse', \n            cat: 'Greenhouse'\n          }),\n          new Video({\n            url: 'mSNu1OBKqh0', \n            title:\n              'How To Make Compost and Add Organic Amendments', \n            cat: 'Compost'\n          }),\n\n          new Video({\n            url: 'MACjIdB80Qc', \n            title:\n              'Winter Harvest', \n            cat: 'Winter Farming'\n          })\n\n\n\n        ]\n      })\n    ];\n\n this.nutTrees = ['Almond', 'Cashew', 'Chestnut', 'Hazel', 'Macadamia', 'Pecan', 'Hicory' , 'Pine', 'Pistachio', 'Walnut' ];\n  // tslint:disable-next-line:max-line-length\n  this.countries = ['Afghanistan', 'Albania', 'Algeria', 'Andorra', 'Angola', 'Anguilla', 'Antigua & Barbuda', 'Argentina', 'Armenia', 'Aruba', 'Australia', 'Austria', 'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus', 'Belgium', 'Belize', 'Benin', 'Bermuda', 'Bhutan', 'Bolivia', 'Bosnia & Herzegovina', 'Botswana', 'Brazil', 'British Virgin Islands', 'Brunei', 'Bulgaria', 'Burkina Faso', 'Burundi', 'Cambodia', 'Cameroon', 'Canada', 'Cape Verde', 'Cayman Islands', 'Central Arfrican Republic', 'Chad', 'Chile', 'China', 'Colombia', 'Congo', 'Cook Islands', 'Costa Rica', 'Cote D Ivoire', 'Croatia', 'Cuba', 'Curacao', 'Cyprus', 'Czech Republic', 'Denmark', 'Djibouti', 'Dominica', 'Dominican Republic', 'Ecuador', 'Egypt', 'El Salvador', 'Equatorial Guinea', 'Eritrea', 'Estonia', 'Ethiopia', 'Falkland Islands', 'Faroe Islands', 'Fiji', 'Finland', 'France', 'French Polynesia', 'French West Indies', 'Gabon', 'Gambia', 'Georgia', 'Germany', 'Ghana', 'Gibraltar', 'Greece', 'Greenland', 'Grenada', 'Guam', 'Guatemala', 'Guernsey', 'Guinea', 'Guinea Bissau', 'Guyana', 'Haiti', 'Honduras', 'Hong Kong', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran', 'Iraq', 'Ireland', 'Isle of Man', 'Israel', 'Italy', 'Jamaica', 'Japan', 'Jersey', 'Jordan', 'Kazakhstan', 'Kenya', 'Kiribati', 'Kosovo', 'Kuwait', 'Kyrgyzstan', 'Laos', 'Latvia', 'Lebanon', 'Lesotho', 'Liberia', 'Libya', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Macau', 'Macedonia', 'Madagascar', 'Malawi', 'Malaysia', 'Maldives', 'Mali', 'Malta', 'Marshall Islands', 'Mauritania', 'Mauritius', 'Mexico', 'Micronesia', 'Moldova', 'Monaco', 'Mongolia', 'Montenegro', 'Montserrat', 'Morocco', 'Mozambique', 'Myanmar', 'Namibia', 'Nauro', 'Nepal', 'Netherlands', 'Netherlands Antilles', 'New Caledonia', 'New Zealand', 'Nicaragua', 'Niger', 'Nigeria', 'North Korea', 'Norway', 'Oman', 'Pakistan', 'Palau', 'Palestine', 'Panama', 'Papua New Guinea', 'Paraguay', 'Peru', 'Philippines', 'Poland', 'Portugal', 'Puerto Rico', 'Qatar', 'Reunion', 'Romania', 'Russia', 'Rwanda', 'Saint Pierre & Miquelon', 'Samoa', 'San Marino', 'Sao Tome and Principe', 'Saudi Arabia', 'Senegal', 'Serbia', 'Seychelles', 'Sierra Leone', 'Singapore', 'Slovakia', 'Slovenia', 'Solomon Islands', 'Somalia', 'South Africa', 'South Korea', 'South Sudan', 'Spain', 'Sri Lanka', 'St Kitts & Nevis', 'St Lucia', 'St Vincent', 'Sudan', 'Suriname', 'Swaziland', 'Sweden', 'Switzerland', 'Syria', 'Taiwan', 'Tajikistan', 'Tanzania', 'Thailand', 'Timor LEste', 'Togo', 'Tonga', 'Trinidad & Tobago', 'Tunisia', 'Turkey', 'Turkmenistan', 'Turks & Caicos', 'Tuvalu', 'Uganda', 'Ukraine', 'United Arab Emirates', 'United Kingdom', 'United States of America', 'Uruguay', 'Uzbekistan', 'Vanuatu', 'Vatican City', 'Venezuela', 'Vietnam', 'Virgin Islands (US)', 'Yemen', 'Zambia', 'Zimbabwe'];\n  }\n\n}\n","import { Video } from './Video';\n\nexport class Farmer {\n    id: number;\n    name: string;\n    videos: Video[];\n\n    constructor({ id, name, videos }) {\n        this.id = id;\n        this.name = name;\n        this.videos = videos;\n    }\n}\n\n","\nexport class Video {\n    public url: string;\n    public title: string;\n    public cat: string;\n\n    constructor( { url, title, cat }) {\n        this.url = url;\n        this.title = title;\n        this.cat = cat;\n    }\n}\n","module.exports = \".title {\\n    font-size: 30px;\\n    font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0NBQ3JCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn0iXX0= */\"","module.exports = \"<app-topnav></app-topnav>\\n<split direction='horizontal'>\\n  <split-area size='20'>\\n    <app-menu></app-menu>\\n\\n  </split-area>\\n  <split-area size='80' style='padding-left:10px;'>\\n    \\n    <app-farmers></app-farmers>\\n  </split-area>\\n</split>\\n\"","import {Component,  PipeTransform, Pipe } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({ name: 'safe' })\nexport class SafePipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) { }\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'App About Farmers';\n  ngVersion = '7.x';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; // reqd for ngModel\n\nimport { AppComponent, SafePipe } from './app.component'; // reqd for iframe safe pipe\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FarmersComponent } from './farmers/farmers.component';\nimport { TopnavComponent } from './topnav/topnav.component';\n\nimport {AngularSplitModule} from 'angular-split-ng6';\nimport { MenuComponent } from './menu/menu.component';\nimport { FilterNamePipe } from './filter-name.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FarmersComponent,\n    TopnavComponent,\n    MenuComponent,\n    SafePipe,\n    FilterNamePipe\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, // reqd for ngModel to work\n\n    AngularSplitModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zhcm1lcnMvZmFybWVycy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h2 id='Great Farmers'>Great Farmers</h2>\\n<ul class='list-group'>\\n  <li class='list-group-item' *ngFor=\\\"let farmer of farmers\\\">\\n    <h3>{{ farmer.name}}</h3>\\n    <ul class='list-group'>\\n      <li class='list-group-item' *ngFor=\\\"let video of farmer.videos\\\">\\n        <h4>{{ video.title }}</h4>\\n        <iframe height=\\\"400\\\" width=\\\"800\\\" allowfullscreen [src]=\\\"youtubeUrl + video.url | safe\\\">\\n        </iframe>\\n      </li>\\n    </ul>\\n</ul>\\n\\n<hr style='padding:30px;' />\\n\\n<h3 id='Indian Rivers'>Indian Rivers</h3>\\n<div  style=\\\"width:200px;\\\">\\n<input list=\\\"rivers\\\" name=\\\"river\\\" class='form-control'>\\n<datalist id=\\\"rivers\\\" class='form-control'>\\n  <option *ngFor=\\\"let river of indianRivers\\\" value=\\\"{{river}}\\\">\\n</datalist>\\n</div>\\n<hr style='padding:30px;' />\\n\\n<h3 id='Countries'>Countries</h3>\\n\\n<div  style=\\\"width:200px;\\\">\\n  <input [(ngModel)]=\\\"selCountry\\\" placeholder=\\\"Country\\\" class='form-control'>\\n  <select id=\\\"countries\\\" class='form-control'>\\n    <option *ngFor=\\\"let country of countries | filterName:selCountry \\\" value=\\\"{{country}}\\\">{{country}}</option>\\n  </select>\\n</div>\\n\\n<hr style='padding:30px;' />\\n\\n<h3 id='Nut Trees'>Nut Trees</h3>\\n\\n<div  style=\\\"width:200px;\\\">\\n  <input [(ngModel)]=\\\"selNutTree\\\" placeholder=\\\"Nut Tree\\\" class='form-control'>\\n  <ul id=\\\"nutTrees\\\" class='list-group'>\\n    <li class='list-group-item' *ngFor=\\\"let nutTree of nutTrees | filterName:selNutTree\\\">{{ nutTree }}</li>\\n  </ul>\\n</div>\\n\\n<hr style='padding:30px;' />\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Farmer } from '../Farmer';\nimport { Common } from '../Common';\n\n@Component({\n  selector: 'app-farmers',\n  templateUrl: './farmers.component.html',\n  styleUrls: ['./farmers.component.css']\n})\nexport class FarmersComponent implements OnInit {\n\n  public farmers: Farmer[];\n  public indianRivers: string[];\n  public youtubeUrl = 'https://www.youtube.com/embed/';\n  public countries: string[];\n  public selCountry: string;\n  public selNutTree: string;\n  public nutTrees: string[];\n\n  // injecting Common...\n  constructor(common: Common) {\n    this.farmers = common.farmers;\n    this.indianRivers = common.indianRivers;\n    this.countries = common.countries;\n    this.selCountry = 'United States of America';\n    this.selNutTree = 'Almond';\n    this.nutTrees = common.nutTrees;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterName',\n  pure: false\n})\nexport class FilterNamePipe implements PipeTransform {\n\n  transform(items: any, filter: string): any {\n    if (!items || !filter) {\n      return items;\n    }\n    // given item contains filter?\n    return items.filter( item => item.toUpperCase().indexOf(filter.toUpperCase()) !== -1);\n  }\n\n}\n","module.exports = \"    .menu-button {\\n      width: 100%;\\n      opacity: .7;\\n      margin-bottom: 10px;\\n      text-align: left;\\n    }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVudS9tZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IklBQUk7TUFDRSxZQUFZO01BQ1osWUFBWTtNQUNaLG9CQUFvQjtNQUNwQixpQkFBaUI7S0FDbEIiLCJmaWxlIjoic3JjL2FwcC9tZW51L21lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiAgICAubWVudS1idXR0b24ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBvcGFjaXR5OiAuNztcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIH1cbiJdfQ== */\"","module.exports = \"<a class='btn btn-primary menu-button' data-toggle=\\\"collapse\\\" href=\\\"#chapter1\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n  aria-controls=\\\"chapter-1\\\"> Farmers, Rivers and Countries </a>\\n<ul class=\\\"list-group collapse\\\" id='chapter1'>\\n  <li class=\\\"list-group-item\\\" *ngFor=\\\"let topic of topics\\\">\\n    <a href='#{{topic}}'>{{topic}}</a>\\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  topics: string[]  = [\n     'Great Farmers',\n     'Indian Rivers',\n     'Countries',\n     'Nut Trees'\n  ];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvcG5hdi90b3BuYXYuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\" style=\\\"margin-bottom:2px;\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"javascript:void(0)\\\">{{ title }}</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\"><a href=\\\"javascript:void(0)\\\">Home</a></li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li ><a href=\\\"{{ mainUrl }}\\\">Main</a></li>\\n      </ul>\\n\\n    </div>\\n    <!-- /.navbar-collapse -->\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-topnav',\n  templateUrl: './topnav.component.html',\n  styleUrls: ['./topnav.component.css']\n})\nexport class TopnavComponent implements OnInit {\n\n  title = 'Farmers.yeah!';\n  mainUrl = '../index.html';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}