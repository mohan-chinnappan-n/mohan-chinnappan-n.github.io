{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/board/board.component.css","webpack:///./src/app/board/board.component.html","webpack:///./src/app/board/board.component.ts","webpack:///./src/app/card/card.component.css","webpack:///./src/app/card/card.component.html","webpack:///./src/app/card/card.component.ts","webpack:///./src/app/cardschema.ts","webpack:///./src/app/cardstore.ts","webpack:///./src/app/list/list.component.css","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/listschema.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/nav/navbar-blue.css","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css\\\" />\\n\\n<app-nav></app-nav>\\n<app-board></app-board>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  appName = 'DX Kanban Board';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { BoardComponent } from './board/board.component';\nimport { ListComponent } from './list/list.component';\nimport { CardComponent } from './card/card.component';\nimport { NavComponent } from './nav/nav.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoardComponent,\n    ListComponent,\n    CardComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"div {\\n  background: #ffffff;\\n  display: flex;\\n  padding: 0 5px;\\n  height: 100vh;\\n  overflow-x: scroll;\\n  margin-left: 5%;\\n}\\n\"","module.exports = \"<div>\\n  <app-list *ngFor=\\\"let list of lists\\\" [list]=\\\"list\\\" [cardStore]=\\\"cardStore\\\"></app-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CardStore } from '../cardstore';\nimport { ListSchema } from '../listschema';\nimport { CardComponent } from '../card/card.component';\nimport { CardSchema } from '../cardschema';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n  cardStore: CardStore;\n  lists: ListSchema[];\n  mdList: CardSchema[];\n  constructor() {\n  }\n\n  setMockData(): void {\n    this.cardStore =  new CardStore();\n    const lists: ListSchema[] = [\n      {\n        name: 'Metadata Types',\n        cards: []\n      },\n      {\n        name: 'SCHEMA',\n        cards: []\n      },\n      {\n        name: 'Business Logic',\n        cards: []\n      },\n\n      {\n        name: 'UI',\n        cards: []\n      },\n\n      {\n        name: 'Perm',\n        cards: []\n      }\n    ];\n\n    this.lists = lists;\n  }\n\n  ngOnInit() {\n    this.setMockData();\n  }\n\n}\n","module.exports = \"p {\\n  border-radius: 8px;\\n  background: #efe;\\n  margin: 6px;\\n  padding: 6px;\\n  box-shadow: 0px 1px 2px 0px rgba(9, 30, 66, 0.25);\\n  transition: background-color 140ms ease-in-out, border-color 75ms ease-in-out;\\n  color: #333;\\n  font-size: 14px;\\n}\\n\\ninput {\\n  height:100px;\\n  border-radius:  8px;\\n  border-radius: 8px;\\n}\\n\\n\"","module.exports = \"<p class=\\\"card\\\" draggable=\\\"true\\\" (dragstart)=\\\"dragStart($event)\\\" id=\\\"{{card.id}}\\\"\\n  (click)=\\\"onSelectCard(card)\\\"\\n  (click)=\\\"toggleDisplayCard()\\\"\\n  *ngIf=\\\"displayCard\\\"\\n  displayCard=true>\\n {{card.description}}\\n</p>\\n\\n<input #addCardInput type=\\\"text\\\" (keyup.enter)=\\\"onEnter(addCardInput.value);\\n  \\n  addCardInput.value='';\\n  displayAddCard=false;\\\"\\n  [(ngModel)]=\\\"selectCard.description\\\"\\n  *ngIf=\\\"selectCard\\\" autofocus>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { CardSchema } from '../cardschema';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit {\n  @Input() card: CardSchema;\n  selectCard: CardSchema;\n  displayCard = true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggleDisplayCard() {\n    this.displayCard = !this.displayCard;\n  }\n\n  dragStart(ev) {\n    ev.dataTransfer.setData('text', ev.target.id);\n  }\n\n  onSelectCard(card: CardSchema): void {\n    this.selectCard = card;\n  }\n}\n","export class CardSchema {\n  id: string;\n  description: string;\n}\n","import { CardSchema } from './cardschema';\n\nexport class CardStore {\n  cards: Object = {};\n  lastid = -1;\n  addCard(card: CardSchema) {\n    card.id = String(++this.lastid);\n    this.cards[card.id] = card;\n    return card.id;\n  }\n\n  getCard(cardId: string) {\n    return this.cards[cardId];\n  }\n\n  newCard(description: string): string {\n    const card = new CardSchema();\n    card.description = description;\n    return (this.addCard(card));\n  }\n}\n","module.exports = \".list {\\n  background: #337ab7;\\n  \\n  width: 258px;\\n  padding: 6px;\\n  margin: 5px;\\n  display: inline-block;\\n  webkit-border-radius: 0 0 4px 4px;\\n  border-radius: 0 0 8px 8px;\\n  border-radius: 8px;\\n  border-color: #337ab7;\\n}\\n.list__title {\\n  color: white;\\n  font-size: 0.85714286em;\\n  line-height:10px ;\\n  margin-top: 20px;\\n  text-transform: uppercase;\\n  display: inline-block;\\n  font-weight: normal;\\n  margin-top: 3px;\\n  flex: 0 100 auto;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  text-align: center;\\n}\\n.list a {\\n  width: 100%;\\n  display: block;\\n  text-decoration: none;\\n}\\ninput{\\n  width: 248px;\\n  padding: 5px;\\n  border: 2px solid steelblue;\\n  text-align: center;\\n  outline: 0;\\n  background: #fff;\\n  box-shadow:none;\\n  font-size:20px;\\n}\\n.list__newcard {\\n  background: #eef; \\n  padding: 10px;\\n}\\n\"","module.exports = \"<div class=\\\"list\\\" (dragover)=\\\"allowDrop($event)\\\" (drop)=\\\"drop($event)\\\">\\n    <p class=\\\"list__title\\\"><strong>{{list.name}}</strong></p>\\n    <div class=\\\"cards\\\">\\n        <app-card *ngFor=\\\"let cardId of list.cards\\\" [card]=\\\"cardStore.getCard(cardId)\\\"></app-card>\\n    </div>\\n     <hr/>\\n    <input #addCardInput type=\\\"text\\\" (keyup.enter)=\\\"onEnter(addCardInput.value); addCardInput.value=''; displayAddCard=false;\\\" *ngIf=\\\"displayAddCard\\\" autofocus>\\n    <a href=\\\"#\\\" class=\\\"list__newcard\\\" (click)=\\\"toggleDisplayAddCard()\\\">\\n        <i class='glyphicon glyphicon-plus'></i>\\n    </a>\\n</div>\\n\"","import { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { CardSchema } from '../cardschema';\nimport { ListSchema } from '../listschema';\nimport { CardStore } from '../cardstore';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  @Input() list: ListSchema;\n  @Input() cardStore: CardStore;\n  displayAddCard = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggleDisplayAddCard() {\n    this.displayAddCard = !this.displayAddCard;\n  }\n\n  onEnter(value: string) {\n    const cardId = this.cardStore.newCard(value);\n    this.list.cards.push(cardId);\n  }\n\n  allowDrop($event) {\n    $event.preventDefault();\n  }\n\n  drop($event) {\n    $event.preventDefault();\n    const data = $event.dataTransfer.getData('text');\n\n    let target = $event.target;\n    const targetClassName = target.className;\n\n    while( target.className !== 'list') {\n      target = target.parentNode;\n    }\n\n    target = target.querySelector('.cards');\n\n    if(targetClassName === 'card') {\n      $event.target.parentNode.insertBefore(document.getElementById(data), $event.target);\n    } else if(targetClassName === 'list__title') {\n      if (target.children.length) {\n        target.insertBefore(document.getElementById(data), target.children[0]);\n      }else {\n        target.appendChild(document.getElementById(data));\n      }\n    } else {\n      target.appendChild(document.getElementById(data));\n    }\n  }\n\n}\n","export class ListSchema {\n  name: string;\n  cards: string[];\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"javascript:void(0)\\\">DX Kanban Board </a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\"><a href=\\\"#/home\\\">Home</a></li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li ><a href=\\\"/\\\">Main</a></li>\\n      </ul>\\n    </div>\\n    <!-- /.navbar-collapse -->\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css', './navbar-blue.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".navbar-default {\\n  background-color: #5bc0de;\\n  border-color: #2b7ec0;\\n}\\n.navbar-default .navbar-brand {\\n  color: #ffffff;\\n}\\n.navbar-default .navbar-brand:hover,\\n.navbar-default .navbar-brand:focus {\\n  color: #ffffff;\\n}\\n.navbar-default .navbar-text {\\n  color: #ffffff;\\n}\\n.navbar-default .navbar-nav > li > a {\\n  color: #ffffff;\\n}\\n.navbar-default .navbar-nav > li > a:hover,\\n.navbar-default .navbar-nav > li > a:focus {\\n  color: #ffffff;\\n}\\n.navbar-default .navbar-nav > li > .dropdown-menu {\\n  background-color: #5bc0de;\\n}\\n.navbar-default .navbar-nav > li > .dropdown-menu > li > a {\\n  color: #ffffff;\\n}\\n.navbar-default .navbar-nav > li > .dropdown-menu > li > a:hover,\\n.navbar-default .navbar-nav > li > .dropdown-menu > li > a:focus {\\n  color: #ffffff;\\n  background-color: #2b7ec0;\\n}\\n.navbar-default .navbar-nav > li > .dropdown-menu > li > .divider {\\n  background-color: #2b7ec0;\\n}\\n.navbar-default .navbar-nav .open .dropdown-menu > .active > a,\\n.navbar-default .navbar-nav .open .dropdown-menu > .active > a:hover,\\n.navbar-default .navbar-nav .open .dropdown-menu > .active > a:focus {\\n  color: #ffffff;\\n  background-color: #2b7ec0;\\n}\\n.navbar-default .navbar-nav > .active > a,\\n.navbar-default .navbar-nav > .active > a:hover,\\n.navbar-default .navbar-nav > .active > a:focus {\\n  color: #ffffff;\\n  background-color: #2b7ec0;\\n}\\n.navbar-default .navbar-nav > .open > a,\\n.navbar-default .navbar-nav > .open > a:hover,\\n.navbar-default .navbar-nav > .open > a:focus {\\n  color: #ffffff;\\n  background-color: #2b7ec0;\\n}\\n.navbar-default .navbar-toggle {\\n  border-color: #2b7ec0;\\n}\\n.navbar-default .navbar-toggle:hover,\\n.navbar-default .navbar-toggle:focus {\\n  background-color: #2b7ec0;\\n}\\n.navbar-default .navbar-toggle .icon-bar {\\n  background-color: #ffffff;\\n}\\n.navbar-default .navbar-collapse,\\n.navbar-default .navbar-form {\\n  border-color: #ffffff;\\n}\\n.navbar-default .navbar-link {\\n  color: #ffffff;\\n}\\n.navbar-default .navbar-link:hover {\\n  color: #ffffff;\\n}\\n@media (max-width: 767px) {\\n  .navbar-default .navbar-nav .open .dropdown-menu > li > a {\\n    color: #ffffff;\\n  }\\n  .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover,\\n  .navbar-default .navbar-nav .open .dropdown-menu > li > a:focus {\\n    color: #ffffff;\\n  }\\n  .navbar-default .navbar-nav .open .dropdown-menu > .active > a,\\n  .navbar-default .navbar-nav .open .dropdown-menu > .active > a:hover,\\n  .navbar-default .navbar-nav .open .dropdown-menu > .active > a:focus {\\n    color: #ffffff;\\n    background-color: #2b7ec0;\\n  }\\n}\\n\"","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}